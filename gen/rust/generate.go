package rust

import (
	"fmt"
	"log"
	"os"
	"path"
	"strings"
)

const generatedMessageWithNewline = "// This file was generated by 'make generate'. Do not modify.\n"

func Generate(formats []string) {
	os.MkdirAll(path.Join("rust", "src", "pkm"), 0755)
	// universalFields := generateInterface(formats)
	for _, format := range formats {
		// generateFormat(format)
		generateFormatClass(strings.ToLower(format))
	}
	generatePKMModule(formats)
	// generateIndex(formats)
	err := generateConversions()
	if err != nil {
		log.Println(err)
	}
	err = generateRustEnums("text-resources")
	if err != nil {
		log.Println(err)
	}
}

func generatePKMModule(formats []string) {
	file, err := os.Create("rust/src/pkm.rs")
	if err != nil {
		log.Println("Error creating output file:", err)
		return
	}
	defer file.Close()

	fileText := generatedMessageWithNewline
	fileText += `
	pub mod util;
	pub mod strings;
	pub mod types;
	pub mod markings;
	mod pkm;pub use pkm::Pkm;
	pub mod test;
	
	`

	for _, format := range formats {
		fmtLower := strings.ToLower(format)
		fileText += fmt.Sprintf("pub mod %s;\npub use %s::%s;\n", fmtLower, fmtLower, format)
	}

	fileText += "\n"

	_, err = file.WriteString(fileText)
	if err != nil {
		fmt.Println("Error writing to exports file:", err)
		return
	}

}
